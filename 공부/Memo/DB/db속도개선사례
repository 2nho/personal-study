  수정전 312ms
  
  
  
SELECT member_id 
		, name					-- 이름
		, employee				-- 관리번호
		, ifnull(birthday, '') AS birthday
		, ifnull(mobile, '') AS mobile
		, ifnull(logon_type, '0') AS logon_type			-- 0 미사용 1 지정맥 2 비밀번호 3 지정맥 + 비밀번호
		, ifnull(password_second_auth, 'N') AS password_second_auth 	-- 비밀번호 요청시 2차인증
		, ifnull(vein_modify, 'N') AS vein_modify			-- 사용자 지정맥 수정여부
		, ifnull(second_auth, 'N') AS second_auth			-- 지정맥 수정시 2차인증 여부
		, ifnull(multi_connect, 'N') AS multi_connect		-- PC 동시 접속 가능유무
		, ifnull(pc_time_unlimited, 'N') AS pc_time_unlimited		-- PC사용시간 무제한
		, ifnull(pc_time_start, '000000') AS pc_time_start			-- 사용가능시각
		, ifnull(pc_time_final, '000000') AS pc_time_final			-- 사용종료시각
		, ifnull(lock_reserve, 5) AS lock_reserve			-- 화면 잠금 유보건수
		, ifnull(lock_term, 10) AS lock_term				-- 화면 잠금 기간
		, ifnull(auth_fail_unlock_term, '') AS auth_fail_unlock_term -- 최종 잠금 해지시각
		, ifnull(screen_saver_waiting, 10) AS screen_saver_waiting	-- 화면보호기 대기시간
		, ifnull(screen_saver_logon, 'Y') AS screen_saver_logon	-- 화면 보호기 시작할 때 로그온 화면표시
		, ifnull(use_agreement, 'N') AS use_agreement			-- 개인정보수집동의
		, ifnull(notice, 'N') AS notice
		, ifnull(limited, 'Y' ) AS limited
		, ifnull(fvein_max, 0) AS fvein_max
		, ifnull(fvein_count, 0) AS fvein_count
		/*, ifnull(manager_level, '04') AS manager_level*/
		, ifnull(dept,'') AS dept
		, ifnull(login_level,'사용자') AS login_level 
	FROM (
		-- 운행일자에 있는데 현재 수정된 사용자 목록
		SELECT  mi.member_id 
				, mi.name						-- 이름
				, mi.employee				-- 관리번호
				, t.name AS dept			-- 230331추가
				, t2.name AS login_level	-- 230331추가
				, mi.birthday 
				, mi.mobile 
				, mod2.logon_type			-- 0 미사용 1 지정맥 2 비밀번호 3 지정맥 + 비밀번호
				, mod2.password_second_auth -- 비밀번호 요청시 2차인증
				, mod2.vein_modify			-- 사용자 지정맥 수정여부
				, mod2.second_auth			-- 지정맥 수정시 2차인증 여부
				, mod2.multi_connect		-- PC 동시 접속 가능유무
				, mod2.pc_time_unlimited	-- PC사용시간 무제한
				, mod2.pc_time_start		-- 사용가능시각
				, mod2.pc_time_final		-- 사용종료시각
				, mod2.lock_reserve			-- 화면 잠금 유보건수
				, mod2.lock_term			-- 화면 잠금 기간
				, mi.auth_fail_unlock_term 	-- 최종 잠금 해지시각
				, mod2.screen_saver_waiting	-- 화면보호기 대기시간
				, mod2.screen_saver_logon	-- 화면 보호기 시작할 때 로그온 화면표시
				, mod2.use_agreement		-- 개인정보수집동의
				, mi.notice
				, mi.limited 
				, mi.fvein_max 
				, mv.fvein_count
		FROM member_oper_day  mod2 
		INNER JOIN member_info mi ON mod2.member_id = mi.member_id
		LEFT OUTER JOIN (SELECT member_id, count(member_id) AS fvein_count
						FROM member_vein GROUP BY member_id) AS mv ON mod2.member_id = mv.member_id	
		JOIN texture t ON t.texture_id = mi.dept
		LEFT OUTER JOIN manager_info ma ON mod2.member_id = ma.member_id
		LEFT OUTER JOIN texture t2 ON ma.login_level = t2.second_code
		WHERE 0=0
		
		UNION ALL
		-- 운행일자에 없는 사용자 중 현재 수정된 목록
		SELECT mi.member_id 
				, mi.name						-- 이름
				, mi.employee				-- 관리번호
				, t.name AS dept			-- 230331추가 부서 이름
				, t2.name AS login_level	-- 230331추가
				, mi.birthday 
				, mi.mobile 				
				, mi.logon_type				-- 0 미사용 1 지정맥 2 비밀번호 3 지정맥 + 비밀번호
				, mi.password_second_auth 	-- 비밀번호 요청시 2차인증
				, mi.vein_modify			-- 사용자 지정맥 수정여부
				, mi.second_auth			-- 지정맥 수정시 2차인증 여부
				, mi.multi_connect			-- PC 동시 접속 가능유무
				, mi.pc_time_unlimited		-- PC사용시간 무제한
				, mi.pc_time_start			-- 사용가능시각
				, mi.pc_time_final			-- 사용종료시각
				, mi.lock_reserve			-- 화면 잠금 유보건수
				, mi.lock_term				-- 화면 잠금 기간
				, mi.auth_fail_unlock_term 	-- 최종 잠금 해지시각
				, mi.screen_saver_waiting	-- 화면보호기 대기시간
				, mi.screen_saver_logon		-- 화면 보호기 시작할 때 로그온 화면표시
				, mi.use_agreement			-- 개인정보수집동의
				, mi.notice
				, mi.limited 
				, mi.fvein_max
				, mv.fvein_count
		FROM member_info mi
		LEFT OUTER JOIN member_oper_day mod2 ON mi.member_id = mod2.member_id
		LEFT OUTER JOIN (SELECT member_id, count(member_id) AS fvein_count
						FROM member_vein GROUP BY member_id) AS mv ON mi.member_id = mv.member_id
		JOIN texture t ON t.texture_id = mi.dept -- 추가
		LEFT OUTER JOIN manager_info ma ON ma.member_id = mi.member_id -- 추가
		LEFT OUTER JOIN texture t2 ON ma.login_level = t2.second_code
		WHERE 0=0
		AND mod2.member_id IS NULL
	) AS tmi
	WHERE member_id != '0000'; 
  
  
 
  
  쿼리 수정 후 112ms 약 1/3 의 속도로 
  SELECT member_id 
		, name					-- 이름
		, employee				-- 관리번호
		, ifnull(birthday, '') AS birthday
		, ifnull(mobile, '') AS mobile
		, ifnull(logon_type, '0') AS logon_type			-- 0 미사용 1 지정맥 2 비밀번호 3 지정맥 + 비밀번호
		, ifnull(password_second_auth, 'N') AS password_second_auth 	-- 비밀번호 요청시 2차인증
		, ifnull(vein_modify, 'N') AS vein_modify			-- 사용자 지정맥 수정여부
		, ifnull(second_auth, 'N') AS second_auth			-- 지정맥 수정시 2차인증 여부
		, ifnull(multi_connect, 'N') AS multi_connect		-- PC 동시 접속 가능유무
		, ifnull(pc_time_unlimited, 'N') AS pc_time_unlimited		-- PC사용시간 무제한
		, ifnull(pc_time_start, '000000') AS pc_time_start			-- 사용가능시각
		, ifnull(pc_time_final, '000000') AS pc_time_final			-- 사용종료시각
		, ifnull(lock_reserve, 5) AS lock_reserve			-- 화면 잠금 유보건수
		, ifnull(lock_term, 10) AS lock_term				-- 화면 잠금 기간
		, ifnull(auth_fail_unlock_term, '') AS auth_fail_unlock_term -- 최종 잠금 해지시각
		, ifnull(screen_saver_waiting, 10) AS screen_saver_waiting	-- 화면보호기 대기시간
		, ifnull(screen_saver_logon, 'Y') AS screen_saver_logon	-- 화면 보호기 시작할 때 로그온 화면표시
		, ifnull(use_agreement, 'N') AS use_agreement			-- 개인정보수집동의
		, ifnull(notice, 'N') AS notice
		, ifnull(limited, 'Y' ) AS limited
		, ifnull(fvein_max, 0) AS fvein_max
		, ifnull(fvein_count, 0) AS fvein_count
		/*, ifnull(manager_level, '04') AS manager_level*/
		, ifnull(dept,'') AS dept
		, ifnull(login_level,'사용자') AS login_level 
	FROM (
		-- 운행일자에 있는데 현재 수정된 사용자 목록
		SELECT  mi.member_id 
				, mi.name						-- 이름
				, mi.employee				-- 관리번호
				, t.name AS dept			-- 230331추가
				-- , t2.name AS login_level	-- 230331추가
				, ifnull((SELECT name FROM TEXTURE T3 WHERE second_code = ma.login_level AND texture_code ='leve'), '사용자') AS login_level 
				, mi.birthday 
				, mi.mobile 
				, mod2.logon_type			-- 0 미사용 1 지정맥 2 비밀번호 3 지정맥 + 비밀번호
				, mod2.password_second_auth -- 비밀번호 요청시 2차인증
				, mod2.vein_modify			-- 사용자 지정맥 수정여부
				, mod2.second_auth			-- 지정맥 수정시 2차인증 여부
				, mod2.multi_connect		-- PC 동시 접속 가능유무
				, mod2.pc_time_unlimited	-- PC사용시간 무제한
				, mod2.pc_time_start		-- 사용가능시각
				, mod2.pc_time_final		-- 사용종료시각
				, mod2.lock_reserve			-- 화면 잠금 유보건수
				, mod2.lock_term			-- 화면 잠금 기간
				, mi.auth_fail_unlock_term 	-- 최종 잠금 해지시각
				, mod2.screen_saver_waiting	-- 화면보호기 대기시간
				, mod2.screen_saver_logon	-- 화면 보호기 시작할 때 로그온 화면표시
				, mod2.use_agreement		-- 개인정보수집동의
				, mi.notice
				, mi.limited 
				, mi.fvein_max 
				, mv.fvein_count
		FROM member_oper_day  mod2 
		INNER JOIN member_info mi ON mod2.member_id = mi.member_id
		LEFT OUTER JOIN (SELECT member_id, count(member_id) AS fvein_count
						FROM member_vein GROUP BY member_id) AS mv ON mod2.member_id = mv.member_id	
		JOIN texture t ON t.texture_id = mi.dept
		LEFT OUTER JOIN manager_info ma ON mod2.member_id = ma.member_id
		-- LEFT OUTER JOIN texture t2 ON ma.login_level = t2.second_code
		WHERE 0=0
		
		UNION ALL
		-- 운행일자에 없는 사용자 중 현재 수정된 목록
		SELECT mi.member_id 
				, mi.name						-- 이름
				, mi.employee				-- 관리번호
				, t.name AS dept			-- 230331추가 부서 이름
				-- , t2.name AS login_level	-- 230331추가
				, ifnull((SELECT name FROM TEXTURE T3 WHERE second_code = ma.login_level AND texture_code ='leve'), '사용자') AS login_level 
				, mi.birthday 
				, mi.mobile 				
				, mi.logon_type				-- 0 미사용 1 지정맥 2 비밀번호 3 지정맥 + 비밀번호
				, mi.password_second_auth 	-- 비밀번호 요청시 2차인증
				, mi.vein_modify			-- 사용자 지정맥 수정여부
				, mi.second_auth			-- 지정맥 수정시 2차인증 여부
				, mi.multi_connect			-- PC 동시 접속 가능유무
				, mi.pc_time_unlimited		-- PC사용시간 무제한
				, mi.pc_time_start			-- 사용가능시각
				, mi.pc_time_final			-- 사용종료시각
				, mi.lock_reserve			-- 화면 잠금 유보건수
				, mi.lock_term				-- 화면 잠금 기간
				, mi.auth_fail_unlock_term 	-- 최종 잠금 해지시각
				, mi.screen_saver_waiting	-- 화면보호기 대기시간
				, mi.screen_saver_logon		-- 화면 보호기 시작할 때 로그온 화면표시
				, mi.use_agreement			-- 개인정보수집동의
				, mi.notice
				, mi.limited 
				, mi.fvein_max
				, mv.fvein_count
		FROM member_info mi
		LEFT OUTER JOIN member_oper_day mod2 ON mi.member_id = mod2.member_id
		LEFT OUTER JOIN (SELECT member_id, count(member_id) AS fvein_count
						FROM member_vein GROUP BY member_id) AS mv ON mi.member_id = mv.member_id
		JOIN texture t ON t.texture_id = mi.dept -- 추가
		LEFT OUTER JOIN manager_info ma ON ma.member_id = mi.member_id -- 추가
		-- LEFT OUTER JOIN texture t2 ON ma.login_level = t2.second_code
		WHERE 0=0
		AND mod2.member_id IS NULL
	) AS tmi
	WHERE member_id != '0000'; 


-  LEFT OUTER JOIN 시간이 많이걸리는 비효율적인 조인 
-  member_oper_day의 경우 데이터양이 많지 않아서 사용
- + member_id 는 인덱스가 걸려있음


-- 인덱스 두개짜리 거는 이유 
TEXTURE_ID , TEXTRUE_CODE 있는 경우 
한가지 인덱스로 조회를 하는 것 보다 

TEXTRUE_CODE , TEXTURE_ID  <- 이렇게 해주면 (TEXTURE_CODE,TEXTURE_ID) 두개 동시로 인덱스를 탈 수 있게 하기에 속도가 더욱 빨라짐
 
주의할점은 where 절에서 다중인덱스의 맨왼쪽부터 차례대로 사용해야 인덱스를 탄다는점 
where texture_id 해버리면 다중 인덱스를 타지못함  where TEXTRUE_CODE는 가능  TEXTURE_ID가 없어도된다!
