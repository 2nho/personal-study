일반 옵션
-f, --file=FILENAME: 출력 파일 이름 지정

-F, --format=c|t|p|d: 출력 파일 형식(c: 커스텀, t: tar, p: 일반 텍스트, d: 디렉토리)

-v, --verbose: 상세 정보 표시

-Z, --compress=0-9: 압축 수준 설정(0: 무압축, 9: 최대압축)

--lock-wait-timeout=TIMEOUT: 테이블 잠금 대기 시간 설정

데이터 옵션
-a, --data-only: 데이터만 덤프(스키마 제외)

-s, --schema-only: 스키마만 덤프(데이터 제외)

-b, --blobs: 대용량 객체(BLOB) 포함

-c, --clean: 복원 전 객체 삭제 명령 포함

-C, --create: 데이터베이스 생성 명령 포함

--inserts: COPY 대신 INSERT 명령으로 데이터 덤프

--column-inserts: 열 이름과 함께 INSERT 명령 사용

객체 선택 옵션
-n, --schema=SCHEMA: 지정 스키마만 덤프

-N, --exclude-schema=SCHEMA: 지정 스키마 제외

-t, --table=TABLE: 지정 테이블만 덤프

-T, --exclude-table=TABLE: 지정 테이블 제외

--include-table-data: 지정 테이블의 데이터만 포함

--exclude-table-data: 지정 테이블의 데이터 제외

권한 및 소유권 옵션
-O, --no-owner: 소유권 정보 제외

-x, --no-privileges: 권한 정보(GRANT/REVOKE) 제외

--role=ROLENAME: 덤프 전 SET ROLE 실행

--use-set-session-authorization: ALTER OWNER 대신 SET SESSION AUTHORIZATION 사용

성능 및 특수 옵션
-j, --jobs=NUM: 병렬 처리 작업 수 지정(디렉토리 형식에서만 사용 가능)

--disable-triggers: 데이터 로드 시 트리거 비활성화

--no-tablespaces: 테이블스페이스 정보 제외

--disable-dollar-quoting: $ 인용 구문 사용 안함

--if-exists: DROP 명령에 IF EXISTS 추가

연결 옵션
-h, --host=HOSTNAME: 데이터베이스 서버 호스트

-p, --port=PORT: 데이터베이스 서버 포트

-U, --username=NAME: 연결 사용자 이름

-W, --password: 비밀번호 프롬프트 표시

-w, --no-password: 비밀번호 프롬프트 표시 안함




++ 추가

PostgreSQL에서 -n schema(또는 --schema=schema)와 -s(또는 --schema-only) 옵션은 완전히 다른 목적을 가지고 있습니다:

-n schema (또는 --schema=schema)
목적: 특정 스키마(네임스페이스)에 속한 객체만 덤프합니다.

의미: 여기서 "schema"는 PostgreSQL의 네임스페이스를 의미합니다.

예시: -n public은 public 스키마에 속한 테이블, 함수 등만 덤프합니다.

영향: 지정된 스키마의 객체들의 정의(스키마)와 데이터 모두 덤프합니다.

사용 사례: 데이터베이스에 여러 스키마가 있을 때 특정 스키마만 백업하고 싶은 경우

-s (또는 --schema-only)
목적: 객체 정의(DDL)만 덤프하고 데이터는 제외합니다.

의미: 여기서 "schema"는 데이터베이스 객체의 구조나 정의를 의미합니다.

예시: -s 옵션을 사용하면 CREATE TABLE, CREATE INDEX 등의 명령만 덤프되고 실제 데이터는 포함되지 않습니다.

영향: 모든 스키마(네임스페이스)의 객체 정의를 덤프하지만, 어떤 테이블의 데이터도 포함하지 않습니다.

사용 사례: 데이터베이스 구조만 복제하고 싶을 때

주요 차이점 요약
용어의 의미:

-n에서 "schema"는 PostgreSQL의 네임스페이스(객체 그룹)를 의미

-s에서 "schema"는 데이터베이스 객체의 구조나 정의를 의미

영향 범위:

-n은 특정 네임스페이스의 객체만 선택 (구조와 데이터 모두)

-s는 모든 객체의 구조만 선택 (데이터 제외)

조합 가능성:

두 옵션은 함께 사용할 수 있음: -n public -s는 public 스키마 객체의 정의만 덤프

이러한 차이 때문에 PostgreSQL 문서에서도 혼동을 피하기 위해 특별히 언급하고 있습니다.



++
-n schema (또는 --schema=schema) 옵션만 사용하면:

지정한 스키마의 객체 정의(구조)와 데이터를 모두 덤프합니다.

-n schema와 -s (또는 --schema-only) 옵션을 함께 사용하면:

지정한 스키마의 객체 정의(구조)만 덤프하고 데이터는 제외합니다.

예를 들어:

pg_dump -n public mydatabase : public 스키마의 모든 객체와 데이터를 덤프

pg_dump -n public -s mydatabase : public 스키마의 객체 정의만 덤프하고 데이터는 제외

이렇게 두 옵션을 조합하여 특정 스키마의 구조만 선택적으로 백업할 수 있습니다.
