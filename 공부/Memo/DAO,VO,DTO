DAO 란 ? : Data Access Object , 데이터 접근 객체 로서 db에 접근하기 위한 로직으로서 비즈니스 로직에서 분리하기 위해 사용 한다.
           대부분의 CRUD는 DAO에서 처리 (BUT mybatis가 커넥션 풀을 제공해주기 때문에 사용빈도가 줄어듬)
           
<-커넥션 풀을 간단히 설명하자면
우리가 DB와 연결할 때마다 커넥션 객체를 만들어서 
연결을 맺고 끊어 사용합니다.
이것은 속도도 느리고 비효율 적이고 비용이 많이 듭니다.
그래서 커넥션 객체를 미리 몇 개 만들어서
그것을 DB 연동할 때 사용하고 다시 반납하는 형태입니다.
쉽게 말하면 커넥션 풀 -> 커넥션 수영장입니다.
예전에 선생님이 설명을 해주셨는데 이해가 잘 가더군요.
수영장에 가면 튜브를 빌려야 합니다.
그런데 튜브를 빌릴 때마다 바람을 불어 넣으면 오래 걸리겠죠?
그런데 튜브를 미리 만들어 놓는 겁니다.
그러면 더 빠르겠죠.
그리고 사용이 끝나면 반납하고요.
그런데 문제점은 몇 개의 커넥션이 필요한지 알 수 없기 때문에 조사가 필요합니다.
그리고 또한 커넥션이 많으면 서버의 시작 시 늦어질 수도 있다고 하네요.
일단 수영장으로치면 오늘 손님이 몇 명올지 알 수 없으므로 튜브를 얼마나 만들지
통계 같은 걸 내야 할 겁니다.
그리고 만약에 튜브(커넥션)를 많이 만들어야 한다면 개장 시간이 당연히
늦춰질 수도 있겠죠.
[출처] Spring-boot DB 사용하기 (feat. mybatis, 커넥션 풀, 테스트 코드)|작성자 코딩중독->

DTO 란 ? : Data Transfer Object , 계층 간(Controller, View, Business Layer) 데이터 교환을 위한 자바 빈즈(Java Beans)를 의미한다.
DTO는 로직을 가지지 않는 데이터 객체이고 getter/setter 메소드만 가진 클래스를 의미한다.

VO 란 ? : Value Object , VO는 값 오브젝트로써 값을 위해 쓰인다. Read-Only 특징(사용하는 도중에 변경 불가능하며 오직 읽기만 가능)을 가진다. 
(DTO와 유사하지만 VO는 getter 기능만 존재!)
