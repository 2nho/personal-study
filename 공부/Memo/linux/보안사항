use mysql

mysql -u root -p 
====================================구분선===========================================

$기본계정의 패스워드, 정책 변경
 
방법1.update user set password=password("새로운패스워드") where user='root';
flush privileges;
-ERROR 1054 (42S22): Unknown column 'password' in 'field list' 오류 생길 경우 
mysql> update user set authentication_string=password('새로운패스워드') where user='root';

방법2. set password for root=password("새로운패스워드");

====================================구분선===========================================

$데이터베이스 관리자 권한을 꼭 필요한 계정 및 그룹에만 허용

grant all privileges on DB이름.* to 계정ID@localhost identified by '비밀번호';   (외부에서도 접속가능하게 하려면 lcoalhost %로변경)
=>권한이 잘 부여되었는지 확인 show grants for 계정ID@localhost;

====================================구분선===========================================

$패스워드의 사용기간 및 복잡도를 기관정책에 맞도록 설정

1.복잡도 = password함수 암호화처리 

2. vi /etc/my.cnf.d/mysql-server.cnf    (my.cnf(my.ini) 일수도)
   validate_password.policy=MEDIUM     =? 숫자 + 대문자+ 소문자+특수문자 모두포함

3. 최대 비밀번호 만료일 90일 
	UPDATE mysql.user SET password_lifetime = 90
	WHERE user='변경할아이디'	
	FLUSH PRIVILEGES;

my.cnf(설정파일로 고정방법)
default_password_lifetime=90  이렇게 하면 새로 생성하는 계정마다 90일 지정   0 으로하면 만료안됨

- 기존 인원의 경우 ALTER USER '해당인원'@'localhost' PASSWORD EXPIRE INTERVAL 90 DAY;

====================================구분선===========================================
$원격에서 DB서버로의 접속제한

모든아이피 허용제거
DELETE FROM mysql.user WHERE Host='%';
FLUSH privileges;

====================================구분선===========================================

$일반사용자가 시스템 테이블에 접근할 수 없도록 설정

일반 사용자로부터 mysql.user 테이블 모든 접근 권한 제거
revoke all on mysql.user from ‘[user name]’@’[hosts]’;  -- hosts부분 생략하면 모든 호스트에서 revoke all on mysql.user from ‘[user name]’
flush privileges

$일정 횟수의 로그인 실패 시 잠금 정책 -- mysql 해당부분없음 max_connect_errors 로 설정할 수 있으나 단순 커넥션 뒤 close하게 될 경우 카운트가 돼 막힐수 가 있음

$응용프로그램 또는 DBA계정의 ROLE이 public으로 설정되지 않도록 설정   -- mysql은 해당부분이없음
$데이터베이스의 접근, 변경 ,삭제 등의 로그 -- mysql 해당부분없음
$ OS_ROLES,REMOTE_OSAUTHENTICATION 등 FALSE설정 -- MYSQL 해당부분없음
$보안패치 - 최선버전 사용중 
$DB 사용자 계정을 개별적으로 부여하여 사용 --요구에 따라??
$불필요한 ODBC 제거 

====================================구분선===========================================

$데이터베이스의 주요 파일 보호 등을 위해 DB계정의 umask를 022 이상으로 설정하여 사용
vi <file name>    --list .bashrc / .cshrc / .login / .profile
umask 022

====================================구분선===========================================

$데이터베이스의 주요 설정파일, 패스워드파일 등과 같은 주요 파일들의 접근권한 적절하게 설정
위치 /etc/my.cnf
#chmod 600 ./my.cnf
====================================구분선===========================================
$데이터베이스의 자원 제한 기능을 true로 설정 -- mysql해당 부분이없음
====================================구분선===========================================

$패스워드 확인함수가 설정되어 적용
위에서 validate_password.policy=MEDIUM 로 적용

====================================구분선===========================================
$보안에 취약하지 않은 버전의 데이터베이스를 사용
11버전 사용중
====================================구분선===========================================
$Audit Table은 데이터베이스 관리자 계정에 접근하도록 설정 -- mysql해당 사항없음
====================================구분선===========================================
$관리자 이외의 사용자가 오라클 리스너의 접속을 통해 리스너 로그 및 trace 파일에 대한 변경 제한  -- mysql해당 사항없음
====================================구분선===========================================

$ 인가되지 않은 GRANT OPTION 사용 제한 
revoke Grant_priv ON mysql.user from 계정
또는 
UPDATE mysql.user SET grant_priv='N' WHERE user='해당계정' AND host='호스트주소';
FLUSH PRIVILEGES;
=> 위의 revoke all on mysql.user from ‘[user name]’@’[hosts]’; 을 통해 이미 제거

====================================구분선===========================================
$ 인가되지 않은 Object Owner의 제한 
=> 위의 revoke all on mysql.user from ‘[user name]’@’[hosts]’; 을 통해 이미 제거
====================================구분선===========================================

$패스워드 재사용에 대한 제약 설정
my.cnf 에서 수정
password_history=3 -- 3번이상 변경되어야 재사용 가능
password_reuse_interval=90    -- 90일지나야 재사용가능

====================================구분선===========================================
$리스너의 패스워드를 설정하여 사용 --mysql에는 해당 기능 없음(오라클 전용 보안기능)




==========2023.09.19기준 보완===========


1.포트번호 기본 3306만 인식하던 문제
chmod 권한문제로 600 설정시 mariadb에서 설정을 읽지못함 604하거나 (보안 떨어짐)

my.cnf 소유자를 mysql로 (보안 GOOD) - > chown 명령어로 chown mysql my.cnf

============================================================================
카피 (설정파일변경하기전 오리지널파일 복사)
cp [옵션][복사 할 디렉토리/파일명][복사 될 디렉토리/파일명]

ex) cp /app/bin/original.txt /app/logs/copy.txt
// /app/bin 디렉토리의 original.txt라는 파일을 /app/logs에 copy.txt라는 파일로 복사

- cp server.cnf server_org.cnf

=============================================================================
2. 패스워드 정책 
show plugins 확인
show global variables like 'simple_password%';

install soname 'simple_password_check';  심플패스워드 설치

show plugins  심플패스워드 설치확인

simple_password_check= on 
simple_password_minimal_length=8
simple_password_digits = 1    => 숫자 포함되어야 하는 개수
simple_password_letters_same_case =1 => 대소문자 포함되어야 하는 개수 
simple_password_other_characters = 1 =>특수문자 포함되어야 하는 개수
=============================================================================
3. 로그 설정
general_log=on
general_log_file=general.log            -- /var/lib/mysql에 쌓임
expire_logs_day=99                    -- 0~99 범위 지정가능



===========================================================================
새로 설치하게 될 경우
-데이터베이스 및 테이블 백업- 
덤프 mysqldump -u 아이디 -p 패스워드 -all-databases > 백업할파일명.sql
복구 mysql -u 아이디 - p 패스워드 < 백업파일명.sql

-설치파일-
 cd넣고 -- usb 마운트
fdisk -l
mkdir /root/korecen
mount /dev/sdb1 /root/korecen - 파일옮겨짐 

 cp -r [복사할 파일위치/*] [복사 위치]  - /* 해야 하위디렉토리만 가져옴 /root/korecen/(원하는디렉토리로만가득)
umount /dev/sdb1 - 파일 전부 사라짐 카피필수  

-인코딩 설정확인 및 프로시저 오류방지-
SHOW VARIABLES LIKE 'collation_connection'; -- 인코딩 확인
UPDATE mysql.proc SET collation_connection = 'utf8mb4_unicode_ci' WHERE TYPE ='PROCEDURE' ;    -- 프로시저 오류 방지
flush privileges; 
