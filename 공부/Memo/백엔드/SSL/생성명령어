[#생성명령어]

openssl genrsa -out rootCA.key 2048

openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 36500 ^
-out rootCA.crt ^
-subj "/C=KR/ST=Seoul/L=Geumcheon-gu/O=Innosoft/CN=test.co.kr" ^
-addext "basicConstraints=critical,CA:TRUE" ^
-addext "keyUsage=critical,keyCertSign,cRLSign"

openssl genrsa -out server.key 2048

openssl req -new -key server.key -out server.csr -config san.cnf

방법 1
openssl x509 -req -in server.csr -CA rootCA.crt -CAkey rootCA.key ^
-CAcreateserial -out server.crt -days 36500 ^
-extfile san.cnf -extensions v3_req
Certificate request self-signature ok
subject=C=KR, ST=Seoul, L=Geumcheon-gu, O=Innosoft, OU=Technical Research Center, CN=test.co.kr
방법2
openssl x509 -req -in server.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out server.crt -days 365 -extfile san.cnf -extensions v3_req


-- openssl req -x509 명령어는 인증서 서명 요청(CSR) 과정을 거치지 않고 직접 자체 서명된(self-signed) X.509 인증서를 생성 - CSR 생성과 CA 서명 과정을 건너뛰고 한 번에 인증서
-- openssl x509 -req 명령어는 이미 생성된 CSR(인증서 서명 요청) 파일을 입력으로 받아 이를 서명된 인증서로 변환 - CA(인증 기관)의 개인키와 인증서를 사용하여 CSR에 서명



[#san.cnf 예시]
  
[req]
distinguished_name = req_distinguished_name
req_extensions = v3_req
prompt = no

[req_distinguished_name]
C=KR
ST=Seoul
L=Geumcheon-gu
O=Innosoft
OU=Technical Research Institute Dept
CN=*.innosoft.co.kr

[v3_req]
subjectAltName = @alt_names

[alt_names]
DNS.1=test.co.kr
DNS.2=*.test.co.kr
DNS.3=*.localhost
DNS.4=localhost
IP.1 = 127.0.0.1
